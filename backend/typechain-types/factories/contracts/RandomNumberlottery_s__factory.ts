/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RandomNumberlottery_s,
  RandomNumberlottery_sInterface,
} from "../../contracts/RandomNumberlottery_s";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
    ],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "JoinPaly_Error",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LinkTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "RequestNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "slottery_Error",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfRequests",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequestStatus",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getwiner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "joinPlay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "peopleTomoney",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_requests",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winerdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040527f474e34a077df58807dbe9c96d3c009b23b3c6d0cce433e59bbf5b34f823bc56c60001b600a55620186a0600b60006101000a81548163ffffffff021916908363ffffffff1602179055506003600b60046101000a81548161ffff021916908361ffff1602179055506002600b60066101000a81548163ffffffff021916908363ffffffff1602179055503480156200009c57600080fd5b5060405162002222380380620022228339818101604052810190620000c291906200040c565b33806000738103b0a8a00be2ddc778e6e7eaa21791cd3646258073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000183576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017a906200049f565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200020a5762000209816200029260201b60201c565b5b505050738103b0a8a00be2ddc778e6e7eaa21791cd364625600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b600a6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505062000533565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000304576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002fb9062000511565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600067ffffffffffffffff82169050919050565b620003e681620003c7565b8114620003f257600080fd5b50565b6000815190506200040681620003db565b92915050565b600060208284031215620004255762000424620003c2565b5b60006200043584828501620003f5565b91505092915050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b6000620004876018836200043e565b915062000494826200044f565b602082019050919050565b60006020820190508181036000830152620004ba8162000478565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000620004f96017836200043e565b91506200050682620004c1565b602082019050919050565b600060208201905081810360008301526200052c81620004ea565b9050919050565b608051611ccc620005566000396000818161045801526104ac0152611ccc6000f3fe6080604052600436106100e15760003560e01c8063a168fa891161007f578063dcdcb14711610059578063dcdcb14714610313578063e0c862891461033e578063f2fde38b14610369578063fc2a88c31461039257610126565b8063a168fa8914610280578063ba426c07146102be578063d8a4676f146102d557610126565b80638796ba8c116100bb5780638796ba8c146101b057806388f13df0146101ed5780638da5cb5b1461022a578063973884971461025557610126565b80631fe543e31461016657806375d55ab31461018f57806379ba50971461019957610126565b36610126576101246040518060400160405280600781526020017f72656365697665000000000000000000000000000000000000000000000000008152506103bd565b005b6101646040518060400160405280600881526020017f66616c6c6261636b0000000000000000000000000000000000000000000000008152506103bd565b005b34801561017257600080fd5b5061018d600480360381019061018891906114d8565b610456565b005b610197610516565b005b3480156101a557600080fd5b506101ae610654565b005b3480156101bc57600080fd5b506101d760048036038101906101d29190611534565b6107e9565b6040516101e49190611570565b60405180910390f35b3480156101f957600080fd5b50610214600480360381019061020f91906115e9565b61080d565b6040516102219190611570565b60405180910390f35b34801561023657600080fd5b5061023f610825565b60405161024c9190611625565b60405180910390f35b34801561026157600080fd5b5061026a61084e565b6040516102779190611570565b60405180910390f35b34801561028c57600080fd5b506102a760048036038101906102a29190611534565b61085b565b6040516102b592919061165b565b60405180910390f35b3480156102ca57600080fd5b506102d3610899565b005b3480156102e157600080fd5b506102fc60048036038101906102f79190611534565b610972565b60405161030a929190611742565b60405180910390f35b34801561031f57600080fd5b50610328610a9d565b6040516103359190611625565b60405180910390f35b34801561034a57600080fd5b50610353610ac7565b6040516103609190611570565b60405180910390f35b34801561037557600080fd5b50610390600480360381019061038b91906115e9565b610d7c565b005b34801561039e57600080fd5b506103a7610d90565b6040516103b49190611570565b60405180910390f35b610453816040516024016103d191906117fa565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d96565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050857337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016104ff92919061181c565b60405180910390fd5b6105128282610db0565b5050565b67016345785d8a0000341461056257346040517fe735ceac0000000000000000000000000000000000000000000000000000000081526004016105599190611570565b60405180910390fd5b34600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506008339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610617600880549050610f85565b7f940f8524c5e5984c910d020c9c65918682bc7ed567dbc8d49277f0e787ee5f0033344260405161064a93929190611845565b60405180910390a1565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db906118c8565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600381815481106107f957600080fd5b906000526020600020016000915090505481565b60076020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600380549050905090565b60026020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b60003373ffffffffffffffffffffffffffffffffffffffff16476040516108bf90611919565b60006040518083038185875af1925050503d80600081146108fc576040519150601f19603f3d011682016040523d82523d6000602084013e610901565b606091505b505090508061093c576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6008600061094a91906112a0565b600960006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b600060606002600084815260200190815260200160002060000160019054906101000a900460ff166109d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d09061197a565b60405180910390fd5b6000600260008581526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815260200160018201805480602002602001604051908101604052809291908181526020018280548015610a7e57602002820191906000526020600020905b815481526020019060010190808311610a6a575b5050505050815250509050806000015181604001519250925050915091565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610ad161101e565b67016345785d8a0000471015610b1e57476040517ffb47b9a9000000000000000000000000000000000000000000000000000000008152600401610b159190611570565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600a54600b600a9054906101000a900467ffffffffffffffff16600b60049054906101000a900461ffff16600b60009054906101000a900463ffffffff16600b60069054906101000a900463ffffffff166040518663ffffffff1660e01b8152600401610bcd959493929190611a12565b602060405180830381600087803b158015610be757600080fd5b505af1158015610bfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1f9190611a7a565b90506040518060600160405280600015158152602001600115158152602001600067ffffffffffffffff811115610c5957610c58611395565b5b604051908082528060200260200182016040528015610c875781602001602082028036833780820191505090505b508152506002600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055506040820151816001019080519060200190610cfa9291906112c1565b509050506003819080600181540180825580915050600190039060005260206000200160009091909190915055806004819055507fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee81600b60069054906101000a900463ffffffff16604051610d71929190611aa7565b60405180910390a190565b610d8461101e565b610d8d816110ae565b50565b60045481565b610dad81610da56111db6111fc565b63ffffffff16565b50565b6002600083815260200190815260200160002060000160019054906101000a900460ff16610e13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0a9061197a565b60405180910390fd5b60016002600084815260200190815260200160002060000160006101000a81548160ff02191690831515021790555080600260008481526020019081526020016000206001019080519060200190610e6c9291906112c1565b50600060088054905082600081518110610e8957610e88611ad0565b5b6020026020010151610e9b9190611b2e565b905060088181548110610eb157610eb0611ad0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f47600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611207565b7ffe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d8383604051610f78929190611b5f565b60405180910390a1505050565b61101b81604051602401610f999190611570565b6040516020818303038152906040527ff82c50f1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d96565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a390611bdb565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561111d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111490611c47565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b61130e819050919050565b61129d8160405160240161121b9190611625565b6040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d96565b50565b50805460008255906000526020600020908101906112be9190611318565b50565b8280548282559060005260206000209081019282156112fd579160200282015b828111156112fc5782518255916020019190600101906112e1565b5b50905061130a9190611318565b5090565b611316611c67565b565b5b80821115611331576000816000905550600101611319565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61135c81611349565b811461136757600080fd5b50565b60008135905061137981611353565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113cd82611384565b810181811067ffffffffffffffff821117156113ec576113eb611395565b5b80604052505050565b60006113ff611335565b905061140b82826113c4565b919050565b600067ffffffffffffffff82111561142b5761142a611395565b5b602082029050602081019050919050565b600080fd5b600061145461144f84611410565b6113f5565b905080838252602082019050602084028301858111156114775761147661143c565b5b835b818110156114a0578061148c888261136a565b845260208401935050602081019050611479565b5050509392505050565b600082601f8301126114bf576114be61137f565b5b81356114cf848260208601611441565b91505092915050565b600080604083850312156114ef576114ee61133f565b5b60006114fd8582860161136a565b925050602083013567ffffffffffffffff81111561151e5761151d611344565b5b61152a858286016114aa565b9150509250929050565b60006020828403121561154a5761154961133f565b5b60006115588482850161136a565b91505092915050565b61156a81611349565b82525050565b60006020820190506115856000830184611561565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115b68261158b565b9050919050565b6115c6816115ab565b81146115d157600080fd5b50565b6000813590506115e3816115bd565b92915050565b6000602082840312156115ff576115fe61133f565b5b600061160d848285016115d4565b91505092915050565b61161f816115ab565b82525050565b600060208201905061163a6000830184611616565b92915050565b60008115159050919050565b61165581611640565b82525050565b6000604082019050611670600083018561164c565b61167d602083018461164c565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116b981611349565b82525050565b60006116cb83836116b0565b60208301905092915050565b6000602082019050919050565b60006116ef82611684565b6116f9818561168f565b9350611704836116a0565b8060005b8381101561173557815161171c88826116bf565b9750611727836116d7565b925050600181019050611708565b5085935050505092915050565b6000604082019050611757600083018561164c565b818103602083015261176981846116e4565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117ac578082015181840152602081019050611791565b838111156117bb576000848401525b50505050565b60006117cc82611772565b6117d6818561177d565b93506117e681856020860161178e565b6117ef81611384565b840191505092915050565b6000602082019050818103600083015261181481846117c1565b905092915050565b60006040820190506118316000830185611616565b61183e6020830184611616565b9392505050565b600060608201905061185a6000830186611616565b6118676020830185611561565b6118746040830184611561565b949350505050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006118b260168361177d565b91506118bd8261187c565b602082019050919050565b600060208201905081810360008301526118e1816118a5565b9050919050565b600081905092915050565b50565b60006119036000836118e8565b915061190e826118f3565b600082019050919050565b6000611924826118f6565b9150819050919050565b7f72657175657374206e6f7420666f756e64000000000000000000000000000000600082015250565b600061196460118361177d565b915061196f8261192e565b602082019050919050565b6000602082019050818103600083015261199381611957565b9050919050565b6000819050919050565b6119ad8161199a565b82525050565b600067ffffffffffffffff82169050919050565b6119d0816119b3565b82525050565b600061ffff82169050919050565b6119ed816119d6565b82525050565b600063ffffffff82169050919050565b611a0c816119f3565b82525050565b600060a082019050611a2760008301886119a4565b611a3460208301876119c7565b611a4160408301866119e4565b611a4e6060830185611a03565b611a5b6080830184611a03565b9695505050505050565b600081519050611a7481611353565b92915050565b600060208284031215611a9057611a8f61133f565b5b6000611a9e84828501611a65565b91505092915050565b6000604082019050611abc6000830185611561565b611ac96020830184611a03565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b3982611349565b9150611b4483611349565b925082611b5457611b53611aff565b5b828206905092915050565b6000604082019050611b746000830185611561565b8181036020830152611b8681846116e4565b90509392505050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000611bc560168361177d565b9150611bd082611b8f565b602082019050919050565b60006020820190508181036000830152611bf481611bb8565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000611c3160178361177d565b9150611c3c82611bfb565b602082019050919050565b60006020820190508181036000830152611c6081611c24565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220f31de83ed5fc3d8eb3c8c21785dcc4356eea1dd151ced444c101b2cd9dd400f464736f6c63430008090033";

type RandomNumberlottery_sConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomNumberlottery_sConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomNumberlottery_s__factory extends ContractFactory {
  constructor(...args: RandomNumberlottery_sConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    subscriptionId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(subscriptionId, overrides || {});
  }
  override deploy(
    subscriptionId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(subscriptionId, overrides || {}) as Promise<
      RandomNumberlottery_s & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RandomNumberlottery_s__factory {
    return super.connect(runner) as RandomNumberlottery_s__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomNumberlottery_sInterface {
    return new Interface(_abi) as RandomNumberlottery_sInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RandomNumberlottery_s {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RandomNumberlottery_s;
  }
}
