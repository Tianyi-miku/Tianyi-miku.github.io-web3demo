/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RandomNumberlottery_s,
  RandomNumberlottery_sInterface,
} from "../../../contracts/RandomNumberlottery_sepolia.sol/RandomNumberlottery_s";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
    ],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "JoinPaly_Error",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LinkTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "RequestNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "slottery_Error",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winer",
        type: "address",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfRequests",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequestStatus",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getwiner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "joinPlay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "peopleTomoney",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_requests",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winerdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040527f474e34a077df58807dbe9c96d3c009b23b3c6d0cce433e59bbf5b34f823bc56c60001b600a55620493e0600b60006101000a81548163ffffffff021916908363ffffffff1602179055506003600b60046101000a81548161ffff021916908361ffff1602179055506002600b60066101000a81548163ffffffff021916908363ffffffff1602179055503480156200009c57600080fd5b50604051620020d3380380620020d38339818101604052810190620000c291906200040c565b33806000738103b0a8a00be2ddc778e6e7eaa21791cd3646258073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000183576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017a906200049f565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200020a5762000209816200029260201b60201c565b5b505050738103b0a8a00be2ddc778e6e7eaa21791cd364625600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b600a6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505062000533565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000304576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002fb9062000511565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600067ffffffffffffffff82169050919050565b620003e681620003c7565b8114620003f257600080fd5b50565b6000815190506200040681620003db565b92915050565b600060208284031215620004255762000424620003c2565b5b60006200043584828501620003f5565b91505092915050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b6000620004876018836200043e565b915062000494826200044f565b602082019050919050565b60006020820190508181036000830152620004ba8162000478565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000620004f96017836200043e565b91506200050682620004c1565b602082019050919050565b600060208201905081810360008301526200052c81620004ea565b9050919050565b608051611b7d620005566000396000818161045801526104ac0152611b7d6000f3fe6080604052600436106100e15760003560e01c8063a168fa891161007f578063dcdcb14711610059578063dcdcb14714610313578063e0c862891461033e578063f2fde38b14610369578063fc2a88c31461039257610126565b8063a168fa8914610280578063ba426c07146102be578063d8a4676f146102d557610126565b80638796ba8c116100bb5780638796ba8c146101b057806388f13df0146101ed5780638da5cb5b1461022a578063973884971461025557610126565b80631fe543e31461016657806375d55ab31461018f57806379ba50971461019957610126565b36610126576101246040518060400160405280600781526020017f72656365697665000000000000000000000000000000000000000000000000008152506103bd565b005b6101646040518060400160405280600881526020017f66616c6c6261636b0000000000000000000000000000000000000000000000008152506103bd565b005b34801561017257600080fd5b5061018d6004803603810190610188919061137b565b610456565b005b610197610516565b005b3480156101a557600080fd5b506101ae610654565b005b3480156101bc57600080fd5b506101d760048036038101906101d291906113d7565b6107e9565b6040516101e49190611413565b60405180910390f35b3480156101f957600080fd5b50610214600480360381019061020f919061148c565b61080d565b6040516102219190611413565b60405180910390f35b34801561023657600080fd5b5061023f610825565b60405161024c91906114c8565b60405180910390f35b34801561026157600080fd5b5061026a61084e565b6040516102779190611413565b60405180910390f35b34801561028c57600080fd5b506102a760048036038101906102a291906113d7565b61085b565b6040516102b59291906114fe565b60405180910390f35b3480156102ca57600080fd5b506102d3610899565b005b3480156102e157600080fd5b506102fc60048036038101906102f791906113d7565b610972565b60405161030a9291906115e5565b60405180910390f35b34801561031f57600080fd5b50610328610a9d565b60405161033591906114c8565b60405180910390f35b34801561034a57600080fd5b50610353610ac7565b6040516103609190611413565b60405180910390f35b34801561037557600080fd5b50610390600480360381019061038b919061148c565b610d7c565b005b34801561039e57600080fd5b506103a7610d90565b6040516103b49190611413565b60405180910390f35b610453816040516024016103d1919061169d565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d96565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050857337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016104ff9291906116bf565b60405180910390fd5b6105128282610db0565b5050565b67016345785d8a0000341461056257346040517fe735ceac0000000000000000000000000000000000000000000000000000000081526004016105599190611413565b60405180910390fd5b34600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506008339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610617600880549050610ec1565b7f940f8524c5e5984c910d020c9c65918682bc7ed567dbc8d49277f0e787ee5f0033344260405161064a939291906116e8565b60405180910390a1565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db9061176b565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600381815481106107f957600080fd5b906000526020600020016000915090505481565b60076020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600380549050905090565b60026020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b60003373ffffffffffffffffffffffffffffffffffffffff16476040516108bf906117bc565b60006040518083038185875af1925050503d80600081146108fc576040519150601f19603f3d011682016040523d82523d6000602084013e610901565b606091505b505090508061093c576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6008600061094a9190611143565b600960006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b600060606002600084815260200190815260200160002060000160019054906101000a900460ff166109d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d09061181d565b60405180910390fd5b6000600260008581526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815260200160018201805480602002602001604051908101604052809291908181526020018280548015610a7e57602002820191906000526020600020905b815481526020019060010190808311610a6a575b5050505050815250509050806000015181604001519250925050915091565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610ad1610f5a565b67016345785d8a0000471015610b1e57476040517ffb47b9a9000000000000000000000000000000000000000000000000000000008152600401610b159190611413565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600a54600b600a9054906101000a900467ffffffffffffffff16600b60049054906101000a900461ffff16600b60009054906101000a900463ffffffff16600b60069054906101000a900463ffffffff166040518663ffffffff1660e01b8152600401610bcd9594939291906118b5565b602060405180830381600087803b158015610be757600080fd5b505af1158015610bfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1f919061191d565b90506040518060600160405280600015158152602001600115158152602001600067ffffffffffffffff811115610c5957610c58611238565b5b604051908082528060200260200182016040528015610c875781602001602082028036833780820191505090505b508152506002600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055506040820151816001019080519060200190610cfa929190611164565b509050506003819080600181540180825580915050600190039060005260206000200160009091909190915055806004819055507fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee81600b60069054906101000a900463ffffffff16604051610d7192919061194a565b60405180910390a190565b610d84610f5a565b610d8d81610fea565b50565b60045481565b610dad81610da5611117611138565b63ffffffff16565b50565b600060088054905082600081518110610dcc57610dcb611973565b5b6020026020010151610dde91906119d1565b905060088181548110610df457610df3611973565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fed0ce7ad1739b90cc4f577e1fb062d20aa017a2f5b685a1dde6d70a52ea9ce318383600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610eb493929190611a02565b60405180910390a1505050565b610f5781604051602401610ed59190611413565b6040516020818303038152906040527ff82c50f1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d96565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fe8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdf90611a8c565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611059576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105090611af8565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6111b1819050919050565b508054600082559060005260206000209081019061116191906111bb565b50565b8280548282559060005260206000209081019282156111a0579160200282015b8281111561119f578251825591602001919060010190611184565b5b5090506111ad91906111bb565b5090565b6111b9611b18565b565b5b808211156111d45760008160009055506001016111bc565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6111ff816111ec565b811461120a57600080fd5b50565b60008135905061121c816111f6565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61127082611227565b810181811067ffffffffffffffff8211171561128f5761128e611238565b5b80604052505050565b60006112a26111d8565b90506112ae8282611267565b919050565b600067ffffffffffffffff8211156112ce576112cd611238565b5b602082029050602081019050919050565b600080fd5b60006112f76112f2846112b3565b611298565b9050808382526020820190506020840283018581111561131a576113196112df565b5b835b81811015611343578061132f888261120d565b84526020840193505060208101905061131c565b5050509392505050565b600082601f83011261136257611361611222565b5b81356113728482602086016112e4565b91505092915050565b60008060408385031215611392576113916111e2565b5b60006113a08582860161120d565b925050602083013567ffffffffffffffff8111156113c1576113c06111e7565b5b6113cd8582860161134d565b9150509250929050565b6000602082840312156113ed576113ec6111e2565b5b60006113fb8482850161120d565b91505092915050565b61140d816111ec565b82525050565b60006020820190506114286000830184611404565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114598261142e565b9050919050565b6114698161144e565b811461147457600080fd5b50565b60008135905061148681611460565b92915050565b6000602082840312156114a2576114a16111e2565b5b60006114b084828501611477565b91505092915050565b6114c28161144e565b82525050565b60006020820190506114dd60008301846114b9565b92915050565b60008115159050919050565b6114f8816114e3565b82525050565b600060408201905061151360008301856114ef565b61152060208301846114ef565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61155c816111ec565b82525050565b600061156e8383611553565b60208301905092915050565b6000602082019050919050565b600061159282611527565b61159c8185611532565b93506115a783611543565b8060005b838110156115d85781516115bf8882611562565b97506115ca8361157a565b9250506001810190506115ab565b5085935050505092915050565b60006040820190506115fa60008301856114ef565b818103602083015261160c8184611587565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561164f578082015181840152602081019050611634565b8381111561165e576000848401525b50505050565b600061166f82611615565b6116798185611620565b9350611689818560208601611631565b61169281611227565b840191505092915050565b600060208201905081810360008301526116b78184611664565b905092915050565b60006040820190506116d460008301856114b9565b6116e160208301846114b9565b9392505050565b60006060820190506116fd60008301866114b9565b61170a6020830185611404565b6117176040830184611404565b949350505050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b6000611755601683611620565b91506117608261171f565b602082019050919050565b6000602082019050818103600083015261178481611748565b9050919050565b600081905092915050565b50565b60006117a660008361178b565b91506117b182611796565b600082019050919050565b60006117c782611799565b9150819050919050565b7f72657175657374206e6f7420666f756e64000000000000000000000000000000600082015250565b6000611807601183611620565b9150611812826117d1565b602082019050919050565b60006020820190508181036000830152611836816117fa565b9050919050565b6000819050919050565b6118508161183d565b82525050565b600067ffffffffffffffff82169050919050565b61187381611856565b82525050565b600061ffff82169050919050565b61189081611879565b82525050565b600063ffffffff82169050919050565b6118af81611896565b82525050565b600060a0820190506118ca6000830188611847565b6118d7602083018761186a565b6118e46040830186611887565b6118f160608301856118a6565b6118fe60808301846118a6565b9695505050505050565b600081519050611917816111f6565b92915050565b600060208284031215611933576119326111e2565b5b600061194184828501611908565b91505092915050565b600060408201905061195f6000830185611404565b61196c60208301846118a6565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006119dc826111ec565b91506119e7836111ec565b9250826119f7576119f66119a2565b5b828206905092915050565b6000606082019050611a176000830186611404565b8181036020830152611a298185611587565b9050611a3860408301846114b9565b949350505050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000611a76601683611620565b9150611a8182611a40565b602082019050919050565b60006020820190508181036000830152611aa581611a69565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000611ae2601783611620565b9150611aed82611aac565b602082019050919050565b60006020820190508181036000830152611b1181611ad5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea26469706673582212208ee18e46d78730c6ef39cc5a123f16dc7651af9131364191a6896f8fa3273c3164736f6c63430008090033";

type RandomNumberlottery_sConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomNumberlottery_sConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomNumberlottery_s__factory extends ContractFactory {
  constructor(...args: RandomNumberlottery_sConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    subscriptionId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(subscriptionId, overrides || {});
  }
  override deploy(
    subscriptionId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(subscriptionId, overrides || {}) as Promise<
      RandomNumberlottery_s & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RandomNumberlottery_s__factory {
    return super.connect(runner) as RandomNumberlottery_s__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomNumberlottery_sInterface {
    return new Interface(_abi) as RandomNumberlottery_sInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RandomNumberlottery_s {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RandomNumberlottery_s;
  }
}
